{"version":3,"sources":["Chart.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SCALES","text","fn","Math","log","log2","log10","v","Chart","props","scale","dataObj","states","forEach","state","statesData","stateData","date","cases","data","Object","keys","sort","map","obj","derivative","value","idx","prev","windowSize","squashedData","i","currObj","sum","numElems","j","length","push","dataKey","type","dot","activeDot","key","defaultProps","theme","createMuiTheme","palette","primary","purple","secondary","grey","useStyles","makeStyles","createStyles","root","height","width","marginTop","display","flexDirection","alignItems","app","overflowY","formControl","margin","spacing","minWidth","maxWidth","filterCard","padding","flexShrink","chartCard","flex","derivativeCheckbox","marginLeft","App","classes","useState","processedStatesData","setProcessedStatesData","setStates","setScale","useDerivative","setUseDerivative","setWindowSize","useEffect","dataContainer","axios","get","then","csv","toObjects","deaths","parseInt","a","b","onSelectState","e","target","onSelectScale","onSelectDerivative","checked","onSelectWindowSize","valueText","stateOptions","MenuItem","scaleOptions","ThemeProvider","CssBaseline","Container","className","Grid","container","direction","justify","Card","Typography","variant","component","FormGroup","row","FormControl","InputLabel","Select","multiple","displayEmpty","input","Input","onChange","FormControlLabel","control","Checkbox","label","checkboxLabel","Slider","getAriaValueText","aria-labelledby","valueLabelDisplay","step","min","max","marks","CircularProgress","gutterBottom","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"6dAOMA,EAAS,CACX,GAAM,CAACC,KAAM,aAAcC,GAAIC,KAAKC,KACpC,KAAQ,CAACH,KAAM,aAAcC,GAAIC,KAAKE,MACtC,MAAS,CAACJ,KAAM,cAAeC,GAAIC,KAAKG,OACxC,SAAY,CAACL,KAAM,WAAYC,GAAI,SAAAK,GAAC,OAAIA,KAItCC,EAAQ,SAACC,GACX,IAAMC,EAAQV,EAAOS,EAAMC,OAQrBC,EAAU,GAChBF,EAAMG,OAAOC,SAAQ,SAACC,GAClBL,EAAMM,WAAWD,GAAOD,SAAQ,SAACG,GAGrB,IAAD,EAFHA,EAAUC,QAAQN,EAClBA,EAAQK,EAAUC,MAAMH,GAASJ,EAAMR,GAAGc,EAAUE,OAEpDP,EAAQK,EAAUC,OAAlB,mBAA4BH,EAAQJ,EAAMR,GAAGc,EAAUE,QAAvD,qBAAqEF,EAAUC,MAA/E,SAKZ,IAAIE,EAAOC,OAAOC,KAAKV,GAASW,OAAOC,KAAI,SAACN,GACxC,IAAMO,EAAMb,EAAQM,GAMpB,OALAR,EAAMG,OAAOC,SAAQ,SAACC,GACZA,KAASU,IACXA,EAAIV,GAAS,MAGdU,KAcX,GAXIf,EAAMgB,aACNN,EAAOA,EAAKI,KAAI,SAACG,EAAOC,GACpB,IAAMC,EAAQD,EAAM,EAAKR,EAAKQ,EAAM,GAAKR,EAAKQ,GACxCH,EAAM,CAACP,KAAMS,EAAMT,MAIzB,OAHAR,EAAMG,OAAOC,SAAQ,SAACC,GAClBU,EAAIV,GAASY,EAAMZ,GAASc,EAAKd,MAE9BU,MAIXf,EAAMoB,WAAa,EAAG,CAEtB,IADA,IAAMC,EAAe,GADC,WAEbC,GACL,IAAMC,EAAU,CAACf,KAAME,EAAKY,GAAGd,MAE/BR,EAAMG,OAAOC,SAAQ,SAACC,GAGlB,IAFA,IAAImB,EAAM,EACNC,EAAW,EACNC,EAAIJ,EAAGI,EAAIJ,EAAItB,EAAMoB,cACtBM,GAAKhB,EAAKiB,QADwBD,IAItCF,GAAOd,EAAKgB,GAAGrB,GACfoB,GAAY,EAEhBF,EAAQlB,GAASmB,EAAMC,KAE3BJ,EAAaO,KAAKL,IAfbD,EAAI,EAAGA,EAAIZ,EAAKiB,OAAQL,GAAGtB,EAAMoB,WAAa,EAA9CE,GAiBTZ,EAAOW,EAGX,OACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAWX,KAAMA,GACjB,kBAAC,IAAD,CAAOmB,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,MAhEG7B,EAAMG,OAAOW,KAAI,SAACT,GACrB,OAAO,kBAAC,IAAD,CAAMyB,KAAK,WAAWC,KAAK,EAAOC,WAAW,EAAMC,IAAK5B,EAAOwB,QAASxB,UA+E3FN,EAAMmC,aAAe,CACjBlB,YAAY,EACZI,WAAY,GC9EhB,IAAMe,EAAQC,YAAe,CAC3BC,QAAS,CACLP,KAAM,OACNQ,QAASC,IACTC,UAAWC,OAKXC,EAAYC,aAAW,SAACR,GAAD,OAAWS,YAAa,CACnDC,KAAM,CACFC,OAAQ,OACRC,MAAO,MACPC,UAAW,OACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,IAAK,CACHL,MAAO,MACPD,OAAQ,OACRO,UAAW,QAEbC,YAAa,CACXC,OAAQpB,EAAMqB,QAAQ,GACtBC,SAAU,IACVC,SAAU,KAEZC,WAAY,CACVZ,MAAO,OACPa,QAAS,OACTC,WAAY,IAEdC,UAAW,CACTf,MAAO,OACPa,QAAS,sBACTL,OAAQ,gBACRQ,KAAM,KAERC,mBAAoB,CAClBC,WAAY,YAsKDC,EA9JH,WACV,IAAMC,EAAUzB,EAAUP,GADV,EAEsCiC,qBAFtC,mBAETC,EAFS,KAEYC,EAFZ,OAGYF,mBAAS,IAHrB,mBAGTjE,EAHS,KAGDoE,EAHC,OAIUH,mBAAS,YAJnB,mBAITnE,EAJS,KAIFuE,EAJE,OAK0BJ,oBAAS,GALnC,mBAKTK,EALS,KAKMC,EALN,OAMoBN,mBAAS,GAN7B,mBAMThD,EANS,KAMGuD,EANH,KAQhBC,qBAAU,WACR,IAAMC,EAAgB,GACtBC,IAAMC,IAbS,gFAaOC,MAAK,YAAa,IAAXtE,EAAU,EAAVA,KAC3BuE,IAAIC,UAAUxE,GAAMN,SAAQ,YAAmC,IAAjCI,EAAgC,EAAhCA,KAAMH,EAA0B,EAA1BA,MAAOI,EAAmB,EAAnBA,MAAO0E,EAAY,EAAZA,OAC5C9E,KAASwE,EACXA,EAAcxE,GAAOuB,KAAK,CAACpB,OAAMC,MAAO2E,SAAS3E,GAAQ0E,OAAQC,SAASD,KAE1EN,EAAcxE,GAAS,CAAC,CAACG,OAAMC,MAAO2E,SAAS3E,GAAQ0E,OAAQC,SAASD,QAG5ExE,OAAOC,KAAKiE,GAAezE,SAAQ,SAACC,GAClCwE,EAAcxE,GAAOQ,MAAK,SAACwE,EAAGC,GAAJ,OAAWD,EAAE7E,KAAO8E,EAAE9E,KAAQ,GAAK,QAE/D8D,EAAuBO,QAExB,IAEH,IAAMU,EAAgB,SAACC,GACrBjB,EAAUiB,EAAEC,OAAOxE,QAGfyE,EAAgB,SAACF,GACrBhB,EAASgB,EAAEC,OAAOxE,QAGd0E,EAAqB,SAACH,GAC1Bd,EAAiBc,EAAEC,OAAOG,UAGtBC,EAAqB,SAACL,EAAGvE,GAC7B0D,EAAc1D,IAGV6E,EAAY,SAAChG,GAAD,4BAAsBA,IAElCiG,EAAepF,OAAOC,KAAKyD,GAAuB,IACrDxD,MAAK,SAACwE,EAAGC,GAAJ,OAAWD,EAAIC,EAAK,GAAK,KAC9BxE,KAAI,SAACT,GAAD,OAAW,kBAAC2F,EAAA,EAAD,CAAU/D,IAAK5B,EAAOY,MAAOZ,GAAQA,MAEjD4F,EAAetF,OAAOC,KAAKrB,GAAQuB,KAAI,SAACb,EAAOiB,GAAR,OAC3C,kBAAC8E,EAAA,EAAD,CAAU/D,IAAKf,EAAKD,MAAOhB,GAAQV,EAAOU,GAAOT,SAgEnD,OACI,kBAAC0G,EAAA,EAAD,CAAe/D,MAAOA,GAClB,kBAACgE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWC,UAAWlC,EAAQtB,MAC5B,kBAACyD,EAAA,EAAD,CACIC,WAAS,EACTC,UAAU,SACVrD,WAAW,SACXsD,QAAQ,aACRxD,QAAQ,OACRoD,UAAWlC,EAAQf,KAErB,kBAACsD,EAAA,EAAD,CAAML,UAAWlC,EAAQR,YACvB,kBAACgD,EAAA,EAAD,CACEC,QAAQ,KACRC,UAAU,MAFZ,WAzEXxC,EAGG,oCACN,kBAACyC,EAAA,EAAD,CAAWC,KAAG,GACZ,kBAACC,EAAA,EAAD,CAAaX,UAAWlC,EAAQb,aAC9B,kBAAC2D,EAAA,EAAD,eACA,kBAACC,EAAA,EAAD,CACEC,UAAQ,EACRlG,MAAOd,EACPiH,cAAY,EACZC,MAAO,kBAACC,EAAA,EAAD,MACPC,SAAUhC,GAETQ,IAGL,kBAACiB,EAAA,EAAD,CAAaX,UAAWlC,EAAQb,aAC9B,kBAAC2D,EAAA,EAAD,eACA,kBAACC,EAAA,EAAD,CACEjG,MAAOhB,EACPmH,cAAY,EACZC,MAAO,kBAACC,EAAA,EAAD,MACPC,SAAU7B,GAETO,IAGL,kBAACuB,EAAA,EAAD,CACEnB,UAAWlC,EAAQH,mBACnByD,QACE,kBAACC,EAAA,EAAD,CACE9B,QAASnB,EACT8C,SAAU5B,IAGdgC,MACE,kBAACV,EAAA,EAAD,CAAYZ,UAAWlC,EAAQyD,eAA/B,qBAIN,kBAACd,EAAA,EAAD,CAAWC,KAAG,GACZ,kBAACE,EAAA,EAAD,2BACA,kBAACY,EAAA,EAAD,CACEN,SAAU1B,EACV5E,MAAOG,EACP0G,iBAAkBhC,EAClBiC,kBAAgB,cAChBC,kBAAkB,OAClBC,KAAM,EACNC,IAAK,EACLC,IAAK,EACLC,OAAK,MAnDF,kBAACC,EAAA,EAAD,OAgFOlI,EAAOwB,OAAS,GAChB,kBAAC+E,EAAA,EAAD,CAAML,UAAWlC,EAAQL,WACvB,kBAAC6C,EAAA,EAAD,CACEE,UAAU,KACVyB,cAAY,GAEX/I,EAAOU,GAAOT,KAJjB,oBAMA,kBAAC,EAAD,CACEW,OAAQA,EACRG,WAAY+D,EACZpE,MAAOA,EACPe,WAAYyD,EACZrD,WAAYA,UC7MhBmH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBlE,MAAK,SAAAmE,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.12ed2bd2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    LineChart, XAxis, YAxis, Line, Tooltip, ResponsiveContainer\n} from 'recharts';\n\n\nconst SCALES = {\n    'ln': {text: 'Log base e', fn: Math.log},\n    'log2': {text: 'Log base 2', fn: Math.log2},\n    'log10': {text: 'Log base 10', fn: Math.log10},\n    'unscaled': {text: 'Unscaled', fn: v => v},\n};\n\n\nconst Chart = (props) => {\n    const scale = SCALES[props.scale];\n\n    const getLines = () => {\n        return props.states.map((state) => {\n            return <Line type='monotone' dot={false} activeDot={true} key={state} dataKey={state} />\n        });\n    }\n\n    const dataObj = {};\n    props.states.forEach((state) => {\n        props.statesData[state].forEach((stateData) => {\n            if (stateData.date in dataObj) {\n                dataObj[stateData.date][state] = scale.fn(stateData.cases);\n            } else {\n                dataObj[stateData.date] = {[state]: scale.fn(stateData.cases), date: stateData.date};\n            }\n        })\n    });\n\n    let data = Object.keys(dataObj).sort().map((date) => {\n        const obj = dataObj[date];\n        props.states.forEach((state) => {\n            if (!(state in obj)) {\n                obj[state] = 0;\n            }\n        });\n        return obj;\n    });\n\n    if (props.derivative) {\n        data = data.map((value, idx) => {\n            const prev = (idx > 0) ? data[idx - 1] : data[idx];\n            const obj = {date: value.date};\n            props.states.forEach((state) => {\n                obj[state] = value[state] - prev[state];\n            });\n            return obj;\n        });\n    }\n\n    if (props.windowSize > 1) {\n        const squashedData = [];\n        for (let i = 0; i < data.length; i+=props.windowSize) {\n            const currObj = {date: data[i].date};\n            // eslint-disable-next-line\n            props.states.forEach((state) => {\n                let sum = 0;\n                let numElems = 0;\n                for (let j = i; j < i + props.windowSize; j++) {\n                    if (j >= data.length) {\n                        break;\n                    }\n                    sum += data[j][state];\n                    numElems += 1;\n                }\n                currObj[state] = sum / numElems;\n            });\n            squashedData.push(currObj);\n        }\n        data = squashedData;\n    }\n\n    return (\n        <ResponsiveContainer>\n            <LineChart data={data}>\n            <XAxis dataKey='date' />\n            <YAxis/>\n            <Tooltip />\n            {getLines()}\n            </LineChart>\n        </ResponsiveContainer>\n    );\n};\n\n\nChart.propTypes = {\n    states: PropTypes.arrayOf(PropTypes.string).isRequired,\n    statesData: PropTypes.object.isRequired,\n    scale: PropTypes.oneOf(Object.keys(SCALES)).isRequired,\n    derivative: PropTypes.bool,\n    windowSize: PropTypes.number,\n};\n\nChart.defaultProps = {\n    derivative: false,\n    windowSize: 1,\n};\n\nexport {Chart, SCALES};\n","import React, {useState, useEffect} from 'react';\nimport csv from 'jquery-csv';\nimport {createMuiTheme, ThemeProvider, makeStyles, createStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport purple from '@material-ui/core/colors/purple';\nimport grey from '@material-ui/core/colors/grey';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Input from '@material-ui/core/Input';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from 'axios';\nimport {Chart, SCALES} from './Chart';\n\nconst theme = createMuiTheme({\n  palette: {\n      type: 'dark',\n      primary: purple,\n      secondary: grey,\n  },\n});\n\n\nconst useStyles = makeStyles((theme) => createStyles({\n  root: {\n      height: '100%',\n      width: '80%',\n      marginTop: '16px',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n  },\n  app: {\n    width: '80%',\n    height: '100%',\n    overflowY: 'auto',\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n    maxWidth: 640,\n  },\n  filterCard: {\n    width: '100%',\n    padding: '16px',\n    flexShrink: 0.2,\n  },\n  chartCard: {\n    width: '100%',\n    padding: '16px 16px 40px 16px',\n    margin: '32px 0 32px 0',\n    flex: 0.75,\n  },\n  derivativeCheckbox: {\n    marginLeft: '8px',\n  }\n}));\n\n\nconst STATES_URL = 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv'\n\n\nconst App = () => {\n  const classes = useStyles(theme);\n  const [processedStatesData, setProcessedStatesData] = useState();\n  const [states, setStates] = useState([]);\n  const [scale, setScale] = useState('unscaled');\n  const [useDerivative, setUseDerivative] = useState(false);\n  const [windowSize, setWindowSize] = useState(1);\n\n  useEffect(() => {\n    const dataContainer = {};\n    axios.get(STATES_URL).then(({data}) => {\n      csv.toObjects(data).forEach(({date, state, cases, deaths}) => {\n        if (state in dataContainer) {\n          dataContainer[state].push({date, cases: parseInt(cases), deaths: parseInt(deaths)});\n        } else {\n          dataContainer[state] = [{date, cases: parseInt(cases), deaths: parseInt(deaths)}];\n        }\n      });\n      Object.keys(dataContainer).forEach((state) => {\n        dataContainer[state].sort((a, b) => (a.date > b.date) ? 1 : -1)\n      });\n      setProcessedStatesData(dataContainer);\n    });\n  }, []);\n\n  const onSelectState = (e) => {\n    setStates(e.target.value);\n  };\n\n  const onSelectScale = (e) => {\n    setScale(e.target.value);\n  };\n\n  const onSelectDerivative = (e) => {\n    setUseDerivative(e.target.checked);\n  };\n\n  const onSelectWindowSize = (e, value) => {\n    setWindowSize(value);\n  }\n\n  const valueText = (v) => `Window size ${v}`;\n\n  const stateOptions = Object.keys(processedStatesData || {})\n    .sort((a, b) => (a > b) ? 1 : -1)\n    .map((state) => <MenuItem key={state} value={state}>{state}</MenuItem>);\n\n  const scaleOptions = Object.keys(SCALES).map((scale, idx) => (\n    <MenuItem key={idx} value={scale}>{SCALES[scale].text}</MenuItem>\n  ));\n\n  const getFilters = () => {\n    if (!processedStatesData) {\n      return <CircularProgress />\n    }\n    return (<>\n      <FormGroup row>\n        <FormControl className={classes.formControl}>\n          <InputLabel>States</InputLabel>\n          <Select\n            multiple\n            value={states}\n            displayEmpty\n            input={<Input />}\n            onChange={onSelectState}\n          >\n            {stateOptions}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel>Scales</InputLabel>\n          <Select\n            value={scale}\n            displayEmpty\n            input={<Input />}\n            onChange={onSelectScale}\n          >\n            {scaleOptions}\n          </Select>\n        </FormControl>\n        <FormControlLabel\n          className={classes.derivativeCheckbox}\n          control={\n            <Checkbox\n              checked={useDerivative}\n              onChange={onSelectDerivative}\n            />\n          }\n          label={\n            <InputLabel className={classes.checkboxLabel}>Use derivative</InputLabel>\n          }\n        />\n      </FormGroup>\n      <FormGroup row>\n        <InputLabel>Window size (days)</InputLabel>\n        <Slider\n          onChange={onSelectWindowSize}\n          value={windowSize}\n          getAriaValueText={valueText}\n          aria-labelledby=\"Window size\"\n          valueLabelDisplay=\"auto\"\n          step={1}\n          min={1}\n          max={7}\n          marks\n        />\n      </FormGroup>\n    </>);\n  }\n\n\n\n  return (\n      <ThemeProvider theme={theme}>\n          <CssBaseline>\n              <Container className={classes.root}>\n                <Grid\n                    container\n                    direction='column'\n                    alignItems='center'\n                    justify='flex-start'\n                    display='flex'\n                    className={classes.app}\n                >\n                  <Card className={classes.filterCard}>\n                    <Typography\n                      variant=\"h5\"\n                      component=\"h5\"\n                    >\n                      Options\n                    </Typography>\n                    {getFilters()}\n                  </Card>\n                  {(states.length > 0) && (\n                    <Card className={classes.chartCard}>\n                      <Typography\n                        component='h6'\n                        gutterBottom\n                      >\n                        {SCALES[scale].text} Number of Cases\n                      </Typography>\n                      <Chart\n                        states={states}\n                        statesData={processedStatesData}\n                        scale={scale}\n                        derivative={useDerivative}\n                        windowSize={windowSize}\n                      />\n                    </Card>\n                  )}\n                </Grid>\n              </Container>\n          </CssBaseline>\n      </ThemeProvider>\n  );\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}