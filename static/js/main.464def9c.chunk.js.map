{"version":3,"sources":["Chart.jsx","App.jsx","serviceWorker.js","index.js"],"names":["safeLog","logFn","value","SCALES","text","fn","Math","log","log2","log10","v","colors","getKey","state","dataType","Chart","props","scale","dataObj","states","forEach","statesData","stateData","dataTypes","dt","key","date","data","Object","keys","sort","map","obj","derivative","idx","prev","windowSize","smoothedData","i","currObj","sum","numElems","j","push","length","dataKey","lines","type","dot","activeDot","label","stroke","getLines","defaultProps","toTitle","str","charAt","toUpperCase","substr","toLowerCase","DATA_TYPE","cases","deaths","theme","createMuiTheme","palette","primary","purple","secondary","grey","useStyles","makeStyles","createStyles","root","height","width","breakpoints","down","paddingLeft","paddingRight","app","formControl","margin","spacing","minWidth","maxWidth","filterCard","padding","flexShrink","chartCard","flex","paddingBottom","derivativeCheckbox","marginLeft","filterForm","up","flexDirection","App","classes","useState","processedStatesData","setProcessedStatesData","setStates","setScale","setDataType","useDerivative","setUseDerivative","setWindowSize","useEffect","dataContainer","axios","get","then","csv","toObjects","parseInt","a","b","onSelectState","e","target","onSelectScale","onSelectDerivative","checked","onSelectWindowSize","onSelectDataType","stateOptions","MenuItem","scaleOptions","dataTypeOptions","windowSizeOptions","_","range","ThemeProvider","CssBaseline","Container","className","Grid","container","direction","alignItems","justify","display","Card","Typography","variant","component","FormGroup","FormControl","InputLabel","Select","multiple","displayEmpty","input","Input","onChange","FormControlLabel","control","Checkbox","color","checkboxLabel","CircularProgress","gutterBottom","dtModifier","join","modifier","windowText","getTitle","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.464def9c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n    LineChart, XAxis, YAxis, Line, Tooltip, ResponsiveContainer\n} from 'recharts';\n\n\nconst safeLog = (logFn, value) => value !== 0 ? logFn(value) : value;\n\nconst SCALES = {\n    'ln': {text: 'Log base e', fn: (value) => safeLog(Math.log, value)},\n    'log2': {text: 'Log base 2', fn: (value) => safeLog(Math.log2, value)},\n    'log10': {text: 'Log base 10', fn: (value) => safeLog(Math.log10, value)},\n    'unscaled': {text: 'Unscaled', fn: v => v},\n};\n\nconst colors = [\n    'green', 'red', 'blue', 'yellow', 'violet', 'orange', 'pink',\n]\n\nconst getKey = (state, dataType) => `${state}-${dataType}`;\n\nconst Chart = (props) => {\n    const scale = SCALES[props.scale];\n\n    const getLines = () => {\n        const lines = [];\n        props.states.forEach((state, i) => {\n            props.dataTypes.forEach((dt, j) => {\n                lines.push((\n                    <Line\n                        type='monotone'\n                        dot={false}\n                        activeDot={true}\n                        key={getKey(state, dt)}\n                        dataKey={getKey(state, dt)}\n                        label={`${state} ${dt}`}\n                        stroke={colors[(i * dt.length + j) % colors.length]}\n                    />\n                ));\n            });\n        });\n        return lines;\n    }\n\n    const dataObj = {};\n    props.states.forEach((state) => {\n        props.statesData[state].forEach((stateData) => {\n            props.dataTypes.forEach((dt) => {\n                const key = getKey(state, dt);\n                if (stateData.date in dataObj) {\n                    dataObj[stateData.date][key] = scale.fn(stateData[dt]);\n                } else {\n                    dataObj[stateData.date] = {[key]: scale.fn(stateData[dt]), date: stateData.date};\n                }\n            });\n        });\n    });\n\n    let data = Object.keys(dataObj).sort().map((date) => {\n        const obj = dataObj[date];\n        props.states.forEach((state) => {\n            if (!(state in obj)) {\n                obj[state] = 0;\n            }\n        });\n        return obj;\n    });\n\n    if (props.derivative) {\n        data = data.map((value, idx) => {\n            const prev = (idx > 0) ? data[idx - 1] : data[idx];\n            const obj = {date: value.date};\n            props.states.forEach((state) => {\n                props.dataTypes.forEach((dt) => {\n                    const key = getKey(state, dt);\n                    obj[key] = value[key] - prev[key];\n                });\n            });\n            return obj;\n        });\n    }\n\n    if (props.windowSize > 1) {\n        const smoothedData = [];\n        for (let i = 0; i < data.length; i++) {\n            const currObj = {date: data[i].date};\n            // eslint-disable-next-line\n            props.states.forEach((state) => {\n                props.dataTypes.forEach((dt) => {\n                    const key = getKey(state, dt);\n                    let sum = 0;\n                    let numElems = 0;\n                    for (let j = 0; j < props.windowSize; j++) {\n                        if ((i - j) < 0) {\n                            break;\n                        }\n                        sum += data[i - j][key];\n                        numElems += 1;\n                    }\n                    currObj[key] = sum / numElems;\n                });\n            });\n            smoothedData.push(currObj);\n        }\n        data = smoothedData;\n    }\n\n    return (\n        <ResponsiveContainer>\n            <LineChart data={data}>\n            <XAxis dataKey='date' />\n            <YAxis/>\n            <Tooltip />\n            {getLines()}\n            </LineChart>\n        </ResponsiveContainer>\n    );\n};\n\n\nChart.propTypes = {\n    states: PropTypes.arrayOf(PropTypes.string).isRequired,\n    statesData: PropTypes.object.isRequired,\n    dataTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\n    scale: PropTypes.oneOf(Object.keys(SCALES)).isRequired,\n    derivative: PropTypes.bool,\n    windowSize: PropTypes.number,\n};\n\nChart.defaultProps = {\n    derivative: false,\n    windowSize: 1,\n};\n\nexport {Chart, SCALES};\n","import React, { useState, useEffect } from \"react\";\nimport csv from \"jquery-csv\";\nimport {\n  createMuiTheme,\n  ThemeProvider,\n  makeStyles,\n  createStyles,\n} from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport grey from \"@material-ui/core/colors/grey\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Input from \"@material-ui/core/Input\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { Chart, SCALES } from \"./Chart\";\n\nconst toTitle = (str) =>\n  `${str.charAt(0).toUpperCase()}${str.substr(1).toLowerCase()}`;\n\nconst STATES_URL =\n  \"https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv\";\nconst DATA_TYPE = {\n  cases: \"cases\",\n  deaths: \"deaths\",\n};\n\nconst App = () => {\n  const classes = useStyles(theme);\n  const [processedStatesData, setProcessedStatesData] = useState();\n  const [states, setStates] = useState([]);\n  const [scale, setScale] = useState(\"unscaled\");\n  const [dataType, setDataType] = useState([DATA_TYPE.cases]);\n  const [useDerivative, setUseDerivative] = useState(false);\n  const [windowSize, setWindowSize] = useState(1);\n\n  useEffect(() => {\n    const dataContainer = {};\n    axios.get(STATES_URL).then(({ data }) => {\n      csv.toObjects(data).forEach(({ date, state, cases, deaths }) => {\n        if (state in dataContainer) {\n          dataContainer[state].push({\n            date,\n            cases: parseInt(cases),\n            deaths: parseInt(deaths),\n          });\n        } else {\n          dataContainer[state] = [\n            { date, cases: parseInt(cases), deaths: parseInt(deaths) },\n          ];\n        }\n      });\n      Object.keys(dataContainer).forEach((state) => {\n        dataContainer[state].sort((a, b) => (a.date > b.date ? 1 : -1));\n      });\n      setProcessedStatesData(dataContainer);\n    });\n  }, []);\n\n  const onSelectState = (e) => {\n    setStates(e.target.value);\n  };\n\n  const onSelectScale = (e) => {\n    setScale(e.target.value);\n  };\n\n  const onSelectDerivative = (e) => {\n    setUseDerivative(e.target.checked);\n  };\n\n  const onSelectWindowSize = (e) => {\n    setWindowSize(e.target.value);\n  };\n\n  const onSelectDataType = (e) => {\n    setDataType(e.target.value);\n  };\n\n  const stateOptions = Object.keys(processedStatesData || {})\n    .sort((a, b) => (a > b ? 1 : -1))\n    .map((state) => (\n      <MenuItem key={state} value={state}>\n        {state}\n      </MenuItem>\n    ));\n\n  const scaleOptions = Object.keys(SCALES).map((scale, idx) => (\n    <MenuItem key={idx} value={scale}>\n      {SCALES[scale].text}\n    </MenuItem>\n  ));\n  const dataTypeOptions = Object.keys(DATA_TYPE).map((dt, idx) => (\n    <MenuItem key={idx} value={dt}>\n      {toTitle(DATA_TYPE[dt])}\n    </MenuItem>\n  ));\n  const windowSizeOptions = _.range(1, 8).map((v) => (\n    <MenuItem key={v} value={v}>\n      {v}\n    </MenuItem>\n  ));\n\n  const getFilters = () => {\n    if (!processedStatesData) {\n      return <CircularProgress />;\n    }\n    return (\n      <FormGroup className={classes.filterForm}>\n        <FormControl className={classes.formControl}>\n          <InputLabel>States</InputLabel>\n          <Select\n            multiple\n            value={states}\n            displayEmpty\n            input={<Input />}\n            onChange={onSelectState}\n          >\n            {stateOptions}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel>Scales</InputLabel>\n          <Select\n            value={scale}\n            displayEmpty\n            input={<Input />}\n            onChange={onSelectScale}\n          >\n            {scaleOptions}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel>Window (days)</InputLabel>\n          <Select\n            value={windowSize}\n            input={<Input />}\n            onChange={onSelectWindowSize}\n          >\n            {windowSizeOptions}\n          </Select>\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel>Type</InputLabel>\n          <Select\n            multiple\n            value={dataType}\n            input={<Input />}\n            onChange={onSelectDataType}\n          >\n            {dataTypeOptions}\n          </Select>\n        </FormControl>\n        <FormControlLabel\n          className={classes.derivativeCheckbox}\n          control={\n            <Checkbox\n              checked={useDerivative}\n              onChange={onSelectDerivative}\n              color=\"primary\"\n            />\n          }\n          label={\n            <InputLabel className={classes.checkboxLabel}>\n              Show new\n            </InputLabel>\n          }\n        />\n      </FormGroup>\n    );\n  };\n\n  const getTitle = () => {\n    const dtModifier = toTitle(\n      dataType.length === 1 ? dataType[0] : dataType.join(\" and \")\n    );\n    const modifier = useDerivative ? \"New\" : \"Cumulative\";\n    const windowText = `${windowSize} day${windowSize > 1 ? \"s\" : \"\"} window`;\n    return `${SCALES[scale].text} Number of ${modifier} ${dtModifier} - ${windowText}`;\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline>\n        <Container className={classes.root}>\n          <Grid\n            container\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"flex-start\"\n            display=\"flex\"\n            className={classes.app}\n          >\n            <Card className={classes.filterCard}>\n              <Typography variant=\"h5\" component=\"h5\">\n                Options\n              </Typography>\n              {getFilters()}\n            </Card>\n            {states.length > 0 && dataType.length > 0 && (\n              <Card className={classes.chartCard}>\n                <Typography component=\"h6\" gutterBottom>\n                  {getTitle()}\n                </Typography>\n                <Chart\n                  states={states}\n                  statesData={processedStatesData}\n                  dataTypes={dataType}\n                  scale={scale}\n                  derivative={useDerivative}\n                  windowSize={windowSize}\n                />\n              </Card>\n            )}\n          </Grid>\n        </Container>\n      </CssBaseline>\n    </ThemeProvider>\n  );\n};\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    primary: purple,\n    secondary: grey,\n  },\n});\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      height: \"100%\",\n      width: \"80%\",\n      [theme.breakpoints.down(\"sm\")]: {\n        width: \"100%\",\n        paddingLeft: 0,\n        paddingRight: 0,\n      },\n      marginTop: \"16px\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n    app: {\n      width: \"80%\",\n      height: \"100%\",\n      [theme.breakpoints.down(\"sm\")]: {\n        width: \"100%\",\n      },\n      overflowY: \"auto\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n      maxWidth: 640,\n    },\n    filterCard: {\n      width: \"100%\",\n      padding: \"16px\",\n      flexShrink: 0.2,\n    },\n    chartCard: {\n      width: \"100%\",\n      padding: \"16px 16px 40px 16px\",\n      margin: \"32px 0 32px 0\",\n      flex: 0.75,\n      [theme.breakpoints.down(\"sm\")]: {\n        flex: 1,\n        paddingBottom: \"64px\",\n      },\n    },\n    derivativeCheckbox: {\n      marginLeft: \"8px\",\n    },\n    filterForm: {\n      [theme.breakpoints.up(\"sm\")]: {\n        flexDirection: \"row\",\n      },\n    },\n  })\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}